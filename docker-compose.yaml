services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: always

  airflow-webserver:
    image: apache/airflow:2.8.0-python3.9
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session'
      AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: 'true'
      HUGGINGFACE_TOKEN: ${HUGGINGFACE_TOKEN}
      PYTHONPATH: /opt/airflow/dags:/opt/airflow/plugins
      _PIP_ADDITIONAL_REQUIREMENTS: "transformers torch datasets huggingface-hub tokenizers numpy pandas scikit-learn requests python-dotenv rouge-score"
    volumes:
      - ${AIRFLOW_PROJ_DIR:-.}/dags:/opt/airflow/dags
      - ${AIRFLOW_PROJ_DIR:-.}/logs:/opt/airflow/logs
      - ${AIRFLOW_PROJ_DIR:-.}/plugins:/opt/airflow/plugins
      - ${AIRFLOW_PROJ_DIR:-.}/models:/opt/airflow/models
      - ${AIRFLOW_PROJ_DIR:-.}/data:/opt/airflow/data
    ports:
      - "8080:8080"
    command: bash -c "
      pip install --user 'accelerate>=0.26.0' 'transformers[torch]' peft bitsandbytes &&
      airflow db init &&
      airflow users create --username airflow --firstname Admin --lastname User --role Admin --email admin@example.com --password airflow &&
      airflow webserver
      "
    depends_on:
      postgres:
        condition: service_healthy
    restart: always

  airflow-scheduler:
    image: apache/airflow:2.8.0-python3.9
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      HUGGINGFACE_TOKEN: ${HUGGINGFACE_TOKEN}
      PYTHONPATH: /opt/airflow/dags:/opt/airflow/plugins
      _PIP_ADDITIONAL_REQUIREMENTS: "transformers torch datasets huggingface-hub tokenizers numpy pandas scikit-learn requests python-dotenv rouge-score"
    volumes:
      - ${AIRFLOW_PROJ_DIR:-.}/dags:/opt/airflow/dags
      - ${AIRFLOW_PROJ_DIR:-.}/logs:/opt/airflow/logs
      - ${AIRFLOW_PROJ_DIR:-.}/plugins:/opt/airflow/plugins
      - ${AIRFLOW_PROJ_DIR:-.}/models:/opt/airflow/models
      - ${AIRFLOW_PROJ_DIR:-.}/data:/opt/airflow/data
    command: bash -c "
      pip install --user 'accelerate>=0.26.0' 'transformers[torch]' peft bitsandbytes &&
      sleep 30 &&
      airflow scheduler
      "
    depends_on:
      postgres:
        condition: service_healthy
    restart: always

volumes:
  postgres-db-volume: